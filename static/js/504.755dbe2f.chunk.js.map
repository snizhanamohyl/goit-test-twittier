{"version":3,"file":"static/js/504.755dbe2f.chunk.js","mappings":"yMAUMA,GAASC,EAAAA,EAAAA,OAAK,kBAAM,oDAAkC,IAQ7C,SAASC,IA8CpB,OAAOC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACHF,EAAAA,EAAAA,KAACH,EAAM,KAOf,C","sources":["pages/TweetsPage/TweetsPage.jsx"],"sourcesContent":["// import { useEffect, useState } from \"react\";\n// import { fetchUsers } from '../../services/usersAPI';\n// import CardsList from \"../../components/CardsList/CardsList\";\n// import { BackLink, LoadMoreBtn, Msg, Tweets } from \"./TweetsPage.styled\";\n// import Filter from \"../../components/Filter/Filter\";\n\nimport { lazy } from 'react';\n\n// import Tweets from \"components/Tweets/Tweets\";\n\nconst Tweets = lazy(() => import('components/Tweets/Tweets'));\n\n// const filterOptions = {\n//     all: 'all',\n//     follow: 'follow',\n//     followings: 'followings',\n// }\n\nexport default function TweetsPage() {\n    // const [users, setUsers] = useState(null);\n    // const [currentPage, setCurrentPage] = useState(1);\n    // const [selectedValue, setSelectedValue] = useState(null);\n\n    // useEffect(() => async () => {\n    //     const users = await fetchUsers();\n    //     setUsers(users);\n    // }, []);\n\n    // const getUsers = async () => {\n    //     const users = await fetchUsers();\n    //     setUsers(users);\n    //     filterUsers();\n    // }\n\n    // const onClick = () => {                                       \n    //     setCurrentPage(state => state + 1);\n    // }\n\n    // const getCurrentPageUsers = () => {\n    //     const endUserIndex = currentPage * 3 ;\n    //     return filterUsers()?.slice(0, endUserIndex);\n    // }    \n\n    // const filterUsers = () => {        \n    //     const followingUsersId = JSON.parse(localStorage.getItem('followingUsersId'));\n\n    //     switch (selectedValue) {\n    //         case filterOptions.follow:\n    //             return users.filter(user => !followingUsersId.includes(user.id));\n    //         case filterOptions.followings:\n    //             return users.filter(user => followingUsersId.includes(user.id));\n    //         default:\n    //             return users;\n    //     }\n    // }\n    \n    // const handleFollowBtnClick = ({ target }) => {\n    //     setSelectedValue(target.value);\n    //     setCurrentPage(1);\n    // }\n\n    // const usersToRender = getCurrentPageUsers();\n    // const endOfTweets = filterUsers()?.length / 3 <= currentPage;\n\n    return <>\n        <Tweets/>\n        {/* <BackLink to={'/'}>Go Back</BackLink>\n        <Msg>Don't miss out on the latest trends on Twittier, start following the top accounts!</Msg>\n        <Filter handleFollowBtnClick={handleFollowBtnClick} filterOptions={filterOptions} selectedValue={ selectedValue} />\n        {usersToRender && <CardsList users={usersToRender} getUsers={getUsers} />}\n        {!endOfTweets && <LoadMoreBtn type=\"button\" onClick={ onClick}>Load More</LoadMoreBtn>} */}\n    </>\n}\n"],"names":["Tweets","lazy","TweetsPage","_jsx","_Fragment","children"],"sourceRoot":""}